name: Synchronise release versions

on:
  repository_dispatch:
    types: [Synchronise-release]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  DEPLOYMENT_NAME: ${{ secrets.DEPLOYMENT_NAME }}

jobs:
  sync_releases:
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.DIRIGIBLE_CHECK_RELEASE_TOKEN }}
          ref: main

      - name: Check for new release
        id: release
        run: |
          CURRENT_VERSION=$(curl --silent "https://api.github.com/repos/eclipse/dirigible/releases/latest" |
          grep '"tag_name":' | 
          sed -E 's/.*"([^"]+)".*/\1/')
          echo "LATEST_VERSION: $CURRENT_VERSION"
          PREVIOUS_VERSION=$(head -1 artifact/release.txt)
          echo "PREVIOS_VERSION: $PREVIOUS_VERSION"
          if [ "$PREVIOUS_VERSION" == "$CURRENT_VERSION" ]; then
            VERSION=${PREVIOUS_VERSION:1}
            echo "VERSION=$VERSION" >> $GITHUB_ENV 
            echo "NEW_VERSION=false" >> $GITHUB_ENV
          fi

          if [ "$PREVIOUS_VERSION" != "$CURRENT_VERSION" ]; then
            echo $CURRENT_VERSION > artifact/release.txt
            echo "NEW_VERSION=true" >> $GITHUB_ENV
            CURRENT_VERSION=${CURRENT_VERSION:1} 
            echo "VERSION=$CURRENT_VERSION" >> $GITHUB_ENV 
          fi
          echo "DIRIGIBLE_VERSION: $CURRENT_VERSION"

      - name: New version result
        run: |
          echo "New version: ${{ env.NEW_VERSION }}"
          echo "Version: ${{ env.VERSION }}"

      - name: Update artifact version
        if: "${{ env.NEW_VERSION == 'true' }}"
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Krasimir Dermendzhiev
          author_email: krasimir.dermendzhiev@quanterall.com
          message: 'Update sync'
          add: 'artifact/release.txt'

      # Authentication via credentials json
      - id: 'auth'
        if: ${{ env.NEW_VERSION }} == 'true'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

       # Setup gcloud CLI
       # Get the GKE credentials so we can deploy to the cluster
      - name: Set up Cloud SDK
        if: ${{ env.NEW_VERSION }} == 'true'
        uses: google-github-actions/setup-gcloud@v0
      - run: |
          if [[ ${{ env.NEW_VERSION }} == 'true' ]] ; then
          export USE_GKE_GCLOUD_AUTH_PLUGIN=True
          gcloud components install gke-gcloud-auth-plugin
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE" ;
          fi

      # Change Dirigible version
      - name: Change image version for Dirigible Trial Deploy
        if: ${{ env.NEW_VERSION }} == 'true'
        run: |-
          kubectl set image deployment/trial-dirigible dirigible=dirigiblelabs/dirigible-keycloak:"${{ env.VERSION }}" -n dirigible
