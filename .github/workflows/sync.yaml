name: Synchronise release versions

on:
  schedule:
    - cron: "*/15 * * * *"
  repository_dispatch:
    types: [on-demand-test]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dirigible-cluster
  GKE_ZONE: europe-west1-b
  DEPLOYMENT_NAME: dirigible

jobs:
  sync_releases:
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.DIRIGIBLE_CHECK_RELEASE_TOKEN }}

      - name: Check for new release
        id: release
        run: |
          CURRENT_VERSION=$(curl --silent "https://api.github.com/repos/eclipse/dirigible/releases/latest" |
          grep '"tag_name":' | 
          sed -E 's/.*"([^"]+)".*/\1/')
          PREVIOUS_VERSION=$(head -1 artifact/release.txt)
          echo "PREVIOS_VERSION: $PREVIOUS_VERSION"
          if [ "$PREVIOUS_VERSION" == "$CURRENT_VERSION" ]; then
            VERSION=$PREVIOUS_VERSION
            echo '::set-output name=NEW_VERSION::false'
          else 
            echo $CURRENT_VERSION > artifact/release.txt
            echo '::set-output name=NEW_VERSION::true'
            CURRENT_VERSION=${CURRENT_VERSION:1} 
            echo "VERSION=$CURRENT_VERSION" >> $GITHUB_ENV 
          fi
          echo "CURRENT_DIRIGIBLE_VERSION: $CURRENT_VERSION"

      - name: New version result
        run: |
          echo "${{ steps.release.outputs.NEW_VERSION }}"
          echo "${{ env.VERSION }}"

      - name: Keep current version
        if: steps.release.outputs.NEW_VERSION == 'true'
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Krasimir Dermendzhiev
          author_email: krasimir.dermendzhiev@quanterall.com
          message: 'Update sync'
          add: 'artifact/release.txt'

      # Authentication via credentials json
      - id: 'auth'
        if: steps.release.outputs.NEW_VERSION == 'true'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

       # Setup gcloud CLI
       # Get the GKE credentials so we can deploy to the cluster
      - name: Set up Cloud SDK
        if: steps.release.outputs.NEW_VERSION == 'true'
        uses: google-github-actions/setup-gcloud@v0
      - run: |
          if [[ ${{ steps.release.outputs.NEW_VERSION }} == 'true' ]] ; then
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE" ;
          fi

      # Change Dirigible version
      - name: Change image version for Dirigible Trial Deploy
        if: steps.release.outputs.NEW_VERSION == 'true'
        run: |-
          kubectl set image deployment/dirigible dirigible=dirigiblelabs/dirigible-keycloak:"${{ env.VERSION }}" -n dirigible